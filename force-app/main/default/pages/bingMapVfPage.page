<apex:page showHeader="false" sidebar="false" controller="VFC_DomainsController"> 
    <html>
        <head>
            <title></title>
            <meta charset="utf-8" />
            <!--  <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"/> -->
            <script type='text/javascript'>
            var lexOrigin = '{!lexOrigin}';
            var bluePinUrl = '{!getMapPinURL}';
            console.log('lexOrigin ',lexOrigin); 
            console.log('bluePinUrl ',bluePinUrl);
            let locationListMap = new Map();
            let locNode;
            let extraInfo;
            let mapStored;
            try{           
                var locationList = [];
                
                window.addEventListener("message", function (event) {
                    
                    locationList = JSON.parse(event.data.message);
                    console.log('locationList ',locationList);
                    console.log('$SL-VFP: event.data',event.data);
                    if(event.data.currentRecord && event.data.zoomSize){
                        extraInfo = {
                        	currentRecord: event.data.currentRecord,
                            zoomSize: event.data.zoomSize
                        };
                    }
                    if (event.origin === lexOrigin) {
                        var receivedfromLWC = event.data;
                        
                        let outputLWC = document.getElementById('text-area-sfdc-lwc');
                        outputLWC.innerHTML = JSON.stringify(receivedfromLWC);
                    }
                    console.log('locationList1 ',locationList);
                    
                    if(locationList){ 
                        GetMap();
                    }
                }, false );
            }catch(error){
                console.error(error.message);
            }
            
            
            function GetMap() {
                try{
                    if(locationList.length == 0  || locationList== undefined){
                        var map = new Microsoft.Maps.Map(document.getElementById('myMap'), {});
                        console.log('$SL-VFP: locationList-BLANK: ',locationList);
                        navigator.geolocation.getCurrentPosition(function (position) {
                            var loc = new Microsoft.Maps.Location(
                                position.coords.latitude,
                                position.coords.longitude);
                
                            var pin = new Microsoft.Maps.Pushpin(loc);
                            map.entities.push(pin);
                
                            map.setView({ center: loc, zoom: 15 });
                        });
                        return;
                    }
                    var map = new Microsoft.Maps.Map('#myMap', {});
                    mapStored = map;
                    //Create an infobox at the center of the map but don't show it.
                    infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
                        visible: false
                    });
                    
                    //Assign the infobox to a map instance.
                    infobox.setMap(map);
                    var pinLayer = new Microsoft.Maps.EntityCollection();
                    var locs = [];
                    console.log('$SL-VFP: locationList-',locationList);
                    var zoomSize = locationList.length >1 ?  3 : 15;
                    for (var i = 0; i < locationList.length; i++) {
                        locationListMap.set(locationList[i].POIName, locationList[i]);
                        locs[i]  = new Microsoft.Maps.Location(locationList[i].Latitude, locationList[i].Longitude);
                        let icon = "{!$Resource.BingMapBluePin}";
                        var j = i +1;
                        var pin = new Microsoft.Maps.Pushpin(locs[i], {icon: icon, width:'20px', height:'20px',title: locationList[i].POIName, subTitle: '', text:'' + j});
                        
                        pin.metadata = {
                            title: locationList[i].POIName,
                            description: locationList[i].Phone + ', ' + locationList[i].FullAddress
                        };
                        //Add a click event handler to the pushpin.
                        Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);
                        pinLayer.push(pin);
                    }
                    
                    //Add pushpin to the map.
                    map.entities.push(pinLayer);
                    //  map.entities.push(infoboxLayer);
                    console.log('$SL-VFP: locs',locs);
                    locNode = locs[0];
                    console.log('$SL-VFP: extraInfo',extraInfo);
                    console.log('$SL-VFP: locationList[i].extraInfo',locationList[0].extraInfo);
                    if(extraInfo && locationList[0].extraInfo){
                        locs[0].latitude = parseFloat(extraInfo.currentRecord.latitude);
                        locs[0].longitude = parseFloat(extraInfo.currentRecord.longitude);
                    	var bestview = Microsoft.Maps.LocationRect.fromLocations([locs[0]]);
                        map.setView({ center: bestview.center, zoom: extraInfo.zoomSize });
                    }else{
                    	var bestview = Microsoft.Maps.LocationRect.fromLocations(locs);
                        map.setView({ center: bestview.center, zoom: zoomSize });
                    }
                    
                }catch(error){
                    console.error(error.message);
                }
                
            }
            let clickedPinTitlte = '';
            function pushpinClicked(e) {
                //Make sure the infobox has metadata to display.
                if (e.target.metadata) {
                    //Set the infobox options with the metadata of the pushpin.
                    infobox.setOptions({
                        location: e.target.getLocation(),
                        title: e.target.metadata.title,
                        description: e.target.metadata.description,
                        visible: true,
                        offset: new Microsoft.Maps.Point(0, 25),
                        enableHoverStyle: true,
                        enableClickedStyle: true 
                    });
                    clickedPinTitlte = e.target.metadata.title;
                    sendToLigntningWC();
                    let currentDealer = locationListMap.get(e.target.metadata.title);
                    locNode.latitude = parseFloat(currentDealer.Latitude);
                    locNode.longitude = parseFloat(currentDealer.Longitude);
                    console.log('$SL-VFP: currentDealer: ',currentDealer);
                    console.log('$SL-VFP: locNode: ',locNode);
                    let bestview = Microsoft.Maps.LocationRect.fromLocations([locNode]);
                    mapStored.setView({ center: bestview.center, zoom: 15 });
                }
            }
            
            function sendToLigntningWC(){
                
                let lightningOrigin = '{!lexOrigin}';
                let messgaeToLWC = {
                    message : clickedPinTitlte,
                    source  : 'VisualForce Page'
                }
                window.parent.postMessage(messgaeToLWC, 'https://dev.dreamshop.honda.com');
            }
            
            </script>
            <script src="/soap/ajax/32.0/connection.js" type="text/javascript"/>
            <script src="/soap/ajax/32.0/apex.js" type="text/javascript"/>
                <script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap&key={!$Label.BingMapKey}'></script>
        </head>
        <body>
            <div id="text-area-sfdc-lwc" class="slds-box" />
            
            <div id="myMap" style="position:relative;width: 100vw; height: 100vh;"></div>
            
        </body>
    </html>
    
</apex:page>